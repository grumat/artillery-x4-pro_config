[gcode_macro G29]
gcode:
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE
	G0 Z50 F1800
	G0 X120 Y120 F12000

[gcode_macro nozzle_wipe]
gcode:
	G1 X180 Y247 Z10 F5000
	SET_KINEMATIC_POSITION Y=0

	G1 Y11 F6000
	G1 X180 F8000
	G1 Z-1 F600
	G1 X230 F8000
	G1 Y15 F8000
	G1 X180 F8000

	G92 E0
	G1 Z10 F1200
	G1 Y0 F5000
	G1 E-1 F3000
	M400
	SET_KINEMATIC_POSITION Y=247
	G92 E-1

[gcode_macro nozzle_clean]
gcode:
	G28
	M109 S190
	M104 S160
	nozzle_wipe

[gcode_macro draw_line_only]
gcode:
	G1 X180 Y244 Z0.8 F18000.0
	SET_KINEMATIC_POSITION Y=0
	G92 E0
	G1 Z1.0 F600 ; move z up little to prevent scratching of surface
	G1 X180 Y2 Z0.4 F18000.0 ; move to start-line position
	G1 E8 F300
	G92 E0
	G1 X70  Y2 Z0.4 F1800.0 E11.0;draw line

	G92 E0
	G1 X70  Y0 Z0.4 F1800.0 E0.2;draw line

	G92 E0
	G1 X170 Y0 Z0.4 F1800.0 E10.0;draw line

	G92 E0
	G1 X170 Y4 Z0.4 F1800.0 E0.4;draw line

	G92 E0
	G1 X80  Y4 Z0.4 F1800.0 E9;draw line

	G92 E0
	G1 X80  Y0 Z0.4 F1800.0 E0.4;draw line

	G92 E0 ; reset extruder
	G1 E-1 Z5 F18000 ; move z up little to prevent scratching of surface
	G92 E0

	G1 Y0 F18000.0
	SET_KINEMATIC_POSITION Y=244

[gcode_macro draw_line]
gcode:
	nozzle_wipe
	draw_line_only

[gcode_macro PRINT_START]
gcode:
	M220 S100
	M221 S100
	#SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
	#save_last_file
	CLEAR_PAUSE
	# M83
	M117 Printing

[gcode_macro PRINT_END]
gcode:
	#SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
	#RUN_SHELL_COMMAND CMD=clear_plr
	#clear_last_file
	M220 S100
	M221 S100

[pause_resume]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
	PRINT_END
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE		; wait for buffer to clear
	G92 E0					; zero the extruder
	G1 E-10.0 F1200
	G4 P2000				; retract filament
	# G28 Y
	G28 X
	# G91
	# G1 Y220 F3000
	# G90
	TURN_OFF_HEATERS
	M107
	M84

## Define M300 macro to realize Gcode function
[gcode_macro M300]
description: Play reminder tone
gcode:
	# Use a default 1kHz tone if S is omitted.
	# {% set S = params.S|default(1000)|int %}
	{% set S = 1000|int %}
	# Use a 10ms duration is P is omitted.
	# {% set P = params.P|default(100)|int %}
	{% set P = 100|int %}

	{% set t = params.B|default(3)|int %}
	{% for i in range(t|int) %}
		# SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
		SET_PIN PIN=BEEPER_pin VALUE=0.9 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
		G4 P{P}
		SET_PIN PIN=BEEPER_pin VALUE=0
		G4 P{P}
	{% endfor %}

[gcode_macro M600]
gcode:
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(20)|float %}
	{% set t = params.B|default(3)|int %}

	{% if params.X is defined %}
		{% if params.Y is defined %}
			M300 B{t}
			PAUSE X={X} Y={Y} Z={Z}
		{% else %}
			M300 B{t}
			PAUSE X={X} Z={Z}
		{% endif %}
	{% else %}
		{% if params.Y is defined %}
			M300 B{t}
			PAUSE Y={Y} Z={Z}
		{% else %}
			M300 B{t}
			PAUSE Z={Z}
		{% endif %}
	{% endif %}

[gcode_macro T600]
variable_zhop: 0
variable_etemp: 0
gcode:
	RESUME

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
	{% set min_x = printer.toolhead.axis_minimum.x + 1.0 %}
	{% set min_y = printer.toolhead.axis_minimum.y + 1.0 %}
	{% set max_y = printer.toolhead.axis_maximum.y - 1.0 %}
	{% set X = params.X|default(min_x)|float %}
	{% set Y = params.Y|default(max_y)|float %}

	### Test for filament presence
	{% if printer["filament_switch_sensor fila"].enabled == True %}
		### Move printed object away from the nozzle, if filament is out
		{% if printer["filament_switch_sensor fila"].filament_detected == False %}
			{% set X = min_x %}
			{% set Y = min_y %}
		{% endif %}
	{% endif %}

	{% set z = params.Z|default(20)|int %}
	{% set e = params.E|default(2.5) %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SAVE_GCODE_STATE NAME=PAUSE
	M25
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
		G91
		M83
		G1 E-{e} F2100
		G1 Z{z} F900
	{% else %}
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	{% endif %}
	SAVE_GCODE_STATE NAME=PAUSEPARK
	G90
	{% if params.X is defined %}
		G1 X{X} F3000
	{% endif %}
	{% if params.Y is defined %}
		G1 Y{Y} F3000
	{% endif %}
	#G1 X0 Y0 F6000
	#G1 E{e} F2100
	SET_IDLE_TIMEOUT TIMEOUT=43200

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
	#G28 X Y
	{% set e = params.E|default(2.5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	G91
	M83
	#G1 E-{e} F900
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	{% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
		G1 Z{zhop * -1} F900
		G1 E{e+0.5} F900
	{% else %}
		G1 Z{zhop * -1} F900
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M24

[gcode_macro move_to_point_0]
gcode:
	G90
	G1 Z10 F600
	M400
	G1 X25 Y25  F12000
	M400
	G1 Z0 F600
	M400

[gcode_macro move_to_point_1]
gcode:
	G90
	G1 Z10 F600
	M400
	G1 X220 Y25  F12000
	M400
	G1 Z0 F600
	M400

[gcode_macro move_to_point_2]
gcode:
	G90
	G1 Z10 F600
	M400
	G1 X25 Y220 F12000
	M400
	G1 Z0 F600
	M400

[gcode_macro move_to_point_3]
gcode:
	G90
	G1 Z10 F600
	M400
	G1 X220 Y220  F12000
	M400
	G1 Z0 F600
	M400

